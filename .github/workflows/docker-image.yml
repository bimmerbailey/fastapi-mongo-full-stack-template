name: Docker Image CI

on: push

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Backend Tests
        run: bin/test
    
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Backend style check
        run: bin/dev lint_backend

      - name: Set Node.js 18.2
        uses: actions/setup-node@v3
        with:
          node-version: 18.2

      - name: Frontend style check
        run: |
          cd frontend
          yarn install
          yarn lint:all
        
        
#  build:
#    runs-on: ubuntu-latest
#    needs: test
#    if: success() && github.ref == 'refs/heads/main'
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Build multi-arch images, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: latest
#        run: |
#          docker buildx create --use
#          
#          docker buildx build ./frontend \
#            --target production-build \
#            --platform linux/arm64/v8,linux/amd64 \
#            -t $ECR_REGISTRY/crm-frontend:$IMAGE_TAG \
#            --push
#          
#          docker buildx build ./backend \
#            --target production \
#            --platform linux/arm64/v8,linux/amd64 \
#            -t $ECR_REGISTRY/crm-backend:$IMAGE_TAG \
#            --push